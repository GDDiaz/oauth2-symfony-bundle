<?php

/**
 * This file is part of the authbucket/oauth2-bundle package.
 *
 * (c) Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace AuthBucket\Bundle\OAuth2Bundle\Entity;

use AuthBucket\OAuth2\Model\RefreshTokenInterface;
use AuthBucket\OAuth2\Model\RefreshTokenManagerInterface;
use Doctrine\ORM\EntityRepository;

/**
 * RefreshTokenRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RefreshTokenRepository extends EntityRepository implements RefreshTokenManagerInterface
{
    public function getClass()
    {
        return $this->getClassName();
    }

    public function createRefreshToken()
    {
        $class = $this->getClass();

        return new $class();
    }

    public function deleteRefreshToken(RefreshTokenInterface $refreshToken)
    {
        $this->getEntityManager()->remove($refreshToken);
        $this->getEntityManager()->flush();
    }

    public function reloadRefreshToken(RefreshTokenInterface $refreshToken)
    {
        $this->getEntityManager()->refresh($refreshToken);
    }

    public function updateRefreshToken(RefreshTokenInterface $refreshToken)
    {
        $this->getEntityManager()->persist($refreshToken);
        $this->getEntityManager()->flush();
    }

    public function findRefreshTokenByRefreshToken($refreshToken)
    {
        return $this->findOneBy(array(
            'refreshToken' => $refreshToken,
        ));
    }
}

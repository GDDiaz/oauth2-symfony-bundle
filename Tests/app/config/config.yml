framework:
    #esi:             ~
    #translator:      { fallback: %locale% }
    secret:          fbe0b58410c7435d8b0afde3a2108fade7
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  en
    trusted_proxies: ~
    fragments:       ~
    test: ~
    session:
        storage_id:  session.storage.mock_file
    profiler:
        enabled:     false

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_sqlite
        path:   :memory:
        memory: true

    orm:
        entity_managers:
            default:
                mappings:
                    TestBundle: ~

oauth2:
    model:
        access_token:       Pantarei\Bundle\Oauth2Bundle\Tests\TestBundle\Entity\AccessToken
        authorize:          Pantarei\Bundle\Oauth2Bundle\Tests\TestBundle\Entity\Authorize
        client:             Pantarei\Bundle\Oauth2Bundle\Tests\TestBundle\Entity\Client
        code:               Pantarei\Bundle\Oauth2Bundle\Tests\TestBundle\Entity\Code
        refresh_token:      Pantarei\Bundle\Oauth2Bundle\Tests\TestBundle\Entity\RefreshToken
        scope:              Pantarei\Bundle\Oauth2Bundle\Tests\TestBundle\Entity\Scope
    response_handler:
        code:               oauth2.response_handler.code.class
        token:              oauth2.response_handler.token.class
    grant_handler:
        authorization_code: oauth2.grant_handler.authorization_code.class
        client_credentials: oauth2.grant_handler.client_credentials.class
        password:           oauth2.grant_handler.password.class
        refresh_token:      oauth2.grant_handler.refresh_token.class
    token_handler:
        bearer:             oauth2.token_handler.bearer.class
        mac:                oauth2.token_handler.mac.class
#    user_provider: default

security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        Pantarei\Bundle\Oauth2Bundle\Tests\TestBundle\Entity\User: plaintext

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        default:
            memory:
                users:
                    demousername1: { password: demopassword1, roles: 'ROLE_USER' }
                    demousername2: { password: demopassword2, roles: 'ROLE_USER' }
                    demousername3: { password: demopassword3, roles: 'ROLE_USER' }

    firewalls:
#        resource:
#            pattern: ^/resource
#            oauth2_resource: true
#            stateless: true

        token:
            pattern: ^/token
            oauth2_token: true

        authorize:
            pattern: ^/authorize
            http_basic:
                provider: default

    access_control:
        - { path: ^/resource, roles: [IS_AUTHENTICATED_FULLY] }

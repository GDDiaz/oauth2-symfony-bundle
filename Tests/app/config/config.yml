framework:
    #esi:             ~
    #translator:      { fallback: %locale% }
    secret:          fbe0b58410c7435d8b0afde3a2108fade7
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  en
    trusted_proxies: ~
    fragments:       ~
    test: ~
    session:
        storage_id:  session.storage.mock_file
    profiler:
        enabled:     false

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_sqlite
        path:   %kernel.cache_dir%/.ht.sqlite

    orm:
        entity_managers:
            default:
                mappings:
                    TestBundle: ~

oauth2:
    driver:                 orm
    user_provider:          security.user.provider.concrete.default

    model:
        access_token:       Pantarei\Bundle\Oauth2Bundle\Tests\TestBundle\Entity\AccessToken
        authorize:          Pantarei\Bundle\Oauth2Bundle\Tests\TestBundle\Entity\Authorize
        client:             Pantarei\Bundle\Oauth2Bundle\Tests\TestBundle\Entity\Client
        code:               Pantarei\Bundle\Oauth2Bundle\Tests\TestBundle\Entity\Code
        refresh_token:      Pantarei\Bundle\Oauth2Bundle\Tests\TestBundle\Entity\RefreshToken
        scope:              Pantarei\Bundle\Oauth2Bundle\Tests\TestBundle\Entity\Scope

    response_handler:
        code:               Pantarei\Oauth2\ResponseType\CodeResponseTypeHandler
        token:              Pantarei\Oauth2\ResponseType\TokenResponseTypeHandler

    grant_handler:
        authorization_code: Pantarei\Oauth2\GrantType\AuthorizationCodeGrantTypeHandler
        client_credentials: Pantarei\Oauth2\GrantType\ClientCredentialsGrantTypeHandler
        password:           Pantarei\Oauth2\GrantType\PasswordGrantTypeHandler
        refresh_token:      Pantarei\Oauth2\GrantType\RefreshTokenGrantTypeHandler

    token_handler:
        bearer:             Pantarei\Oauth2\TokenType\BearerTokenTypeHandler
        mac:                Pantarei\Oauth2\TokenType\MacTokenTypeHandler

security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext

    role_hierarchy:
        ROLE_ADMIN:         ROLE_USER
        ROLE_SUPER_ADMIN:   [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        default:
            memory:
                users:
                    demousername1: { password: demopassword1, roles: 'ROLE_USER' }
                    demousername2: { password: demopassword2, roles: 'ROLE_USER' }
                    demousername3: { password: demopassword3, roles: 'ROLE_USER' }

    firewalls:
        resource:
            pattern:            ^/resource
            oauth2_resource:    true
            stateless:          true

        token:
            pattern:            ^/token
            oauth2_token:       true

        authorize:
            pattern:            ^/authorize
            http_basic:
                provider:       default

    access_control:
        - { path: ^/resource, roles: [IS_AUTHENTICATED_FULLY] }

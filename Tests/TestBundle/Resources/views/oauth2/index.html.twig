{% extends "TestBundle::html.html.twig" %}

{% set head_title = 'Authorization Server | AuthBucket\\OAuth2' %}

{% block page %}
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <h1 class="page-header">Authorization Server</h1>
                <blockquote>
                    <p>The server issuing access tokens to the client after successfully authenticating the resource owner and obtaining authorization.</p>
                    <footer><a href="http://tools.ietf.org/html/rfc6749#section-1.1">1.1. Roles</a></footer>
                </blockquote>
                <p class="lead">Authorization server's endpoints usually without GUI, but just RESTful API interface. Read though <a href="https://github.com/authbucket/oauth2/blob/master/app/config/routing_oauth2.php">routing_oauth2.php</a> to see how we implement it.</p>

                <h2 class="page-header">Protocol Endpoints</h2>
                <blockquote>
                    <p>The authorization process utilizes two authorization server endpoints (HTTP resources):</p>
                    <footer><a href="http://tools.ietf.org/html/rfc6749#section-3">3. Protocol Endpoints</a></footer>
                </blockquote>

                <h3>Authorization Endpoint <small>(<code>/oauth2/authorize/http</code> and <code>/oauth2/authorize/form</code>)</small></h3>
                <blockquote>
                    <p>The authorization endpoint is used to interact with the resource owner and obtain an authorization grant.</p>
                    <footer><a href="http://tools.ietf.org/html/rfc6749#section-3.1">3.1. Authorization Endpoint</a></footer>
                </blockquote>
                <p class="lead">Authorization endpoint (<a href="{{ path('oauth2_authorize_http') }}">HTTP Basic Authentication</a> and <a href="{{ path('oauth2_authorize_form') }}">Form-based Authentication</a>) are protected by Silex's <a href="http://silex.sensiolabs.org/doc/providers/security.html">SecurityServiceProvider</a> in this example. Read though <a href="https://github.com/authbucket/oauth2/blob/master/app/config/security.php">security.php</a> to see how we implement it.</p>
                <p>Direct browser access is possible, authentication request will therefore triggered, and able to login with following testing account:</p>
                <ul>
                    <li>Username: <code>demousername1</code></li>
                    <li>Password: <code>demopassword1</code></li>
                </ul>
                <p>After successful login, by default if access this endpoint without addition parameters, an error message <code>{"error":"invalid_request"}</code> should be shown in JSON format.</p>

                <h3>Token Endpoint <small>(<code>/oauth2/token</code>)</small></h3>
                <blockquote>
                    <p>The token endpoint is used by the client to obtain an access token by presenting its authorization grant or refresh token.</p>
                    <footer><a href="http://tools.ietf.org/html/rfc6749#section-3.2">3.2. Token Endpoint</a></footer>
                </blockquote>
                <p class="lead"><a href="{{ path('oauth2_token') }}">Token endpoint</a>  is protected by OAuth2's <a href="https://github.com/authbucket/oauth2/blob/master/src/AuthBucket/OAuth2/Provider/OAuth2ServiceProvider.php">OAuth2ServiceProvider</a> in this example. Read though <a href="https://github.com/authbucket/oauth2/blob/master/app/config/security.php">security.php</a> to see how we implement it.</p>
                <p>By default this endpoint shouldn't access by browser directly with GET, else an error message <code>{"error":"invalid_request"}</code> should be show in JSON format.</p>
                <p>For debug purpose, may consider send out POST request to this endpoint by <a href+"https://addons.mozilla.org/en-US/firefox/addon/httprequester/">HttpRequester</a>.</p>

                <h2 class="page-header">Additional Endpoints</h2>
                <p class="lead">Following endpoints are excluded from <a href="http://tools.ietf.org/html/rfc6749">RFC6749</a>, but live implementation should consider it.</p>

                <h3>Form-based Authentication <small>(<code>/oauth2/login</code>)</small></h3>
                <p class="lead"><a href="{{ path('oauth2_login') }}">Form-based Authentication</a> implemented by Silex's <a href="http://silex.sensiolabs.org/doc/providers/security.html">SecurityServiceProvider</a> in this example. Read though <a href="https://github.com/authbucket/oauth2/blob/master/app/config/routing_oauth2.php">routing_oauth2.php</a> and <a href="https://github.com/authbucket/oauth2/blob/master/app/Resources/views/oauth2/login.html.twig">login.html.twig</a> for more information.</p>
                <p>This is used for protect above <code>/oauth2/authorize/form</code> Authorization Endpoint.</p>

                <h3>Debug Endpoint <small>(<code>/oauth2/debug</code>)</small></h3>
                <p class="lead"><a href="{{ path('oauth2_debug') }}">Debug Endpoint</a> clone the idea of <a href="https://developers.facebook.com/docs/facebook-login/access-tokens#debug">Facebook's Debug API Endpoint</a>, return raw information of corresponding <code>debug_token</code> provided. Read though <a href="https://github.com/authbucket/oauth2/blob/master/app/config/security.php">security.php</a> and <a href="https://github.com/authbucket/oauth2/blob/master/app/config/routing_oauth2.php">routing_oauth2.php</a> for more information.</p>
                <p>When working with an access token, you may need to check what information is associated with it, such as its user or expiry. To use this endpoint, you can issue a GET/POST request, e.g.:</p>
                <pre><code>GET /oauth2/debug?
    debug_token={debug_token}&amp;
    access_token={access_token}</code></pre>
                <ul>
                    <li><code>debug_token</code>: the access token you want to get information about</li>
                    <li><code>access_token</code>: your app access token or a valid user access token from a developer of the app</li>
                </ul>
                <p>The response of the API call is a JSON array containing a map of fields. For example:</p>
                <pre><code>{
    "access_token": "5dc0bdbb2f66a842cb46a02b6d559131",
    "client_id": "authorization_code_grant",
    "expires": 1404641243,
    "scope": [
        "demoscope1"
    ],
    "token_type": "bearer",
    "username": "demousername1"
}</code></pre>
                <p>Remote <a href="{{ path('resource_index') }}">Resource Server</a> may also utilize this debug endpoint to verfiy the supplied access token as <code>debug_token</code>, where provide its own Client Credentials Grant-ed access token as <code>access_token</code> with debug permission.</p>
            </div>
        </div>
    </div>
{% endblock %}
